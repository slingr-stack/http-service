{
    "label": "HTTP",
    "name": "http",
    "apiVersion": "v1",
    "configurationType": "GLOBAL",
    "deployment": {
        "profiles":[
            {
                "name": "default",
                "label": "Default",
                "memory": 256,
                "description": "Default configuration"
            },
            {
                "name": "medium",
                "label": "Medium",
                "memory": 512,
                "description": "Medium memory configuration (512 MB)"
            },
            {
                "name": "big",
                "label": "Big",
                "memory": 768,
                "description": "Big memory configuration (768 MB)"
            },
            {
                "name": "extra",
                "label": "Extra",
                "memory": 1024,
                "description": "Extra memory configuration (1024 MB)"
            }
        ],
        "allowMultipleInstances": true
    },
    "icon48": "https://storage.googleapis.com/static.slingrs.io/platform/endpoints/http.png",
    "configurationHelpUrl": "/services-http.html#configuration",
    "status": "ACTIVE",
    "stores": [],
    "events": [
        {
            "label": "Webhook",
            "name": "webhook",
            "description": "Happens when a HTTP request hits the service URL. Must be a POST with content type application/json."
        },
        {
            "label": "Custom Webhook Sync",
            "name": "syncWebhookCustom",
            "description": "Happens when a async HTTP request hits the service URL and needs a response from the listener. Must be a POST with content type application/json."
        },
        {
            "label": "Webhook Sync",
            "name": "webhookSync",
            "description": "Happens when a async HTTP request hits the service URL and needs a response from the listener. Must be a POST with content type application/json."
        },
        {
            "label": "File Downloaded from external URL",
            "name": "fileDownloaded",
            "description": "Happens when a async download file process is finished (thrown by a GET function with 'forceDownload' enabled and 'downloadSync' disabled)"
        },
        {
            "label": "Download File from App",
            "name": "downloadFile",
            "description": "Happens when a async HTTP request hits the service URL and needs a response from the listener with the file content."
        },
        {
            "label": "Callback",
            "name": "callback",
            "description": "It happens when the default callback is used in an HTTP service call."
        }
    ],
    "functions": [
        {
            "label": "GET",
            "name": "get",
            "description": "Sends a GET request",
            "callbacks": [
                {
                    "name": "fileDownloaded"
                },
                {
                    "name": "callback"
                }
            ]
        },
        {
            "label": "POST",
            "name": "post",
            "description": "Sends a POST request",
            "callbacks": [
                {
                    "name": "callback"
                }
            ]
        },
        {
            "label": "PUT",
            "name": "put",
            "description": "Sends a PUT request",
            "callbacks": [
                {
                    "name": "callback"
                }
            ]
        },
        {
            "label": "PATCH",
            "name": "patch",
            "description": "Sends a PATCH request",
            "callbacks": [
                {
                    "name": "callback"
                }
            ]
        },
        {
            "label": "DELETE",
            "name": "delete",
            "description": "Sends a DELETE request",
            "callbacks": [
                {
                    "name": "callback"
                }
            ]
        },
        {
            "label": "HEAD",
            "name": "head",
            "description": "Sends a HEAD request",
            "callbacks": [
                {
                    "name": "callback"
                }
            ]
        },
        {
            "label": "OPTIONS",
            "name": "options",
            "description": "Sends a OPTIONS request",
            "callbacks": [
                {
                    "name": "callback"
                }
            ]
        }
    ],
    "configuration":[
        {
            "name": "rememberCookies",
            "label": "Remember cookies",
            "description": "If it is enabled, a basic system to exchange cookies is started: the service sends the last received cookies in subsequents requests. Valid values 'enable', 'disable', and with placeholders ('Custom' option).",
            "type": "buttonsGroup",
            "required": true,
            "defaultValue": "disable",
            "typeOptions": {
                "allowCustom": true,
                "possibleValues":[
                    {
                        "label":"Enable",
                        "name":"enable"
                    },
                    {
                        "label":"Disable",
                        "name":"disable"
                    }
                ]
            }
        },
        {
            "name": "allowExternalUrl",
            "label": "Allow External URLs",
            "description": "If it is enabled, the services admits call to paths that starts with 'http://' and 'https://' (using these paths, the baseUrl is ignored). Valid values 'enable', 'disable', and with placeholders ('Custom' option).",
            "type": "buttonsGroup",
            "required": true,
            "visibility": "!!config.baseUrl && !!config.baseUrl.trim()",
            "defaultValue": "disable",
            "typeOptions": {
                "allowCustom": true,
                "possibleValues":[
                    {
                        "label":"Enable",
                        "name":"enable"
                    },
                    {
                        "label":"Disable",
                        "name":"disable"
                    }
                ]
            }
        },
        {
            "name": "connectionTimeout",
            "label": "Connection timeout",
            "description": "Connect timeout interval, in milliseconds (0 = infinity). Default value: 5000 ms (5 sec)",
            "type": "text",
            "required": true,
            "defaultValue": "5000",
            "typeOptions": {
                "validation": {
                    "function": "!config.connectionTimeout || utils.isPlaceholder(config.connectionTimeout) || utils.getInteger(config.connectionTimeout) >= 0",
                    "message": "The time must be a valid placeholder or a positive integer greater than or equal to 0. "
                }
            }
        },
        {
            "name": "readTimeout",
            "label": "Read timeout",
            "description": "Read timeout interval, in milliseconds (0 = infinity). Default value: 60000 ms (60 sec)",
            "type": "text",
            "required": true,
            "defaultValue": "60000",
            "typeOptions": {
                "validation": {
                    "function": "!config.readTimeout || utils.isPlaceholder(config.readTimeout) || utils.getInteger(config.readTimeout) >= 0",
                    "message": "The time must be a valid placeholder or a positive integer greater than or equal to 0. "
                }
            }
        },
        {
            "name": "followRedirects",
            "label": "Follow redirects",
            "description": "Automatic redirection. If it is enabled, the client will automatically redirect to the URI declared in 3xx responses.",
            "type": "buttonsGroup",
            "required": true,
            "defaultValue": "enable",
            "typeOptions": {
                "allowCustom": true,
                "possibleValues":[
                    {
                        "label":"Enable",
                        "name":"enable"
                    },
                    {
                        "label":"Disable",
                        "name":"disable"
                    }
                ]
            }
        },
        {
            "name": "webhook",
            "label": "Webhook URL",
            "type": "label",
            "value": "@config.WEBHOOK_URL"
        },
        {
            "name": "webhookSync",
            "label": "Sync Webhook URL",
            "type": "label",
            "value": "@config.WEBHOOK_SYNC_URL"
        },
        {
            "name": "config",
            "label": "Webhooks configuration",
            "value": "You can pass the above webhook URL to services you want to integrate and you will get the webhook event in your app.",
            "type": "info"
        }
    ]
}